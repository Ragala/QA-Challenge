{"version":3,"file":"_public/js/app.js","sources":["src/app/app.coffee","src/app/examples/examples.coffee","src/app/filters/filters.coffee","src/app/home/home.coffee","src/app/receiver/receiver.coffee","src/app/services/alerts.coffee","src/app/signup/signup.coffee","src/app/ui_flow/add/add.coffee","src/app/ui_flow/delete/delete.coffee","src/app/ui_flow/edit/edit.coffee","src/app/ui_flow/list/list.coffee","src/app/ui_flow/view/view.coffee"],"names":[],"mappings":"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","sourcesContent":["\"use strict\"\n\n# App module\n# =====\n# Defines the app module and list dependent controllers\n#  - bullet point 1\n#  - bullet point 2\n#  - bullet point 3\nApp = angular.module(\"app\", [\n  'ngRoute'\n  'src.templates'\n  'mx.menu'\n  'services.alerts'\n  'app.filters'\n  'app.home'\n  'app.examples'\n  'app.receiver'\n  'app.list'\n  'app.add'\n  'app.view'\n  'app.edit'\n  'app.delete'\n  'app.signup'\n  'g4plus.flash-message'\n  'g4plus-date.directive'\n  'g4ActionsButton'\n])\n\n# App config\n# =====\n# Configures the project with routes\nApp.config ($routeProvider) ->\n  # Home route\n  $routeProvider.when('/home'\n    templateUrl: 'src/app/home/home.jade'\n    controller: 'HomeCtrl'\n  )\n\n  # Examples\n  $routeProvider.when('/examples'\n    templateUrl: 'src/app/examples/examples.jade'\n    controller: 'ExamplesCtrl'\n  )\n\n  # Receiver\n  $routeProvider.when('/receiver'\n    templateUrl: 'src/app/receiver/receiver.jade'\n    controller: 'ReceiverCtrl'\n  )\n\n  # List\n  $routeProvider.when('/list'\n    templateUrl: 'src/app/ui_flow/list/list.jade'\n    controller: 'ListCtrl'\n  )\n\n  # View\n  $routeProvider.when('/view/:id'\n    templateUrl: 'src/app/ui_flow/view/view.jade'\n    controller: 'ViewCtrl'\n  )\n\n  # Add\n  $routeProvider.when('/add'\n    templateUrl: 'src/app/ui_flow/add/add.jade'\n    controller: 'AddCtrl'\n  )\n\n  # Edit\n  $routeProvider.when('/edit/:id'\n    templateUrl: 'src/app/ui_flow/edit/edit.jade'\n    controller: 'EditCtrl'\n  )\n\n  # Sign Up\n  $routeProvider.when('/signup'\n    templateUrl: 'src/app/signup/signup.jade'\n    controller: 'SignupCtrl'\n  )\n\n  # For any unmatched url, redirect to /home\n  $routeProvider.otherwise (\n    redirectTo: \"/home\"\n  )\n\n# App controller\n# =====\n# Handles control of the app\nApp.controller \"AppCtrl\", AppCtrl = ($scope, $location) ->\n\n  # $stateChangeSuccess\n  # --------\n  # Updates the window title upon a state change (another sub-app is loaded)\n  $scope.$on \"$stateChangeSuccess\", (event, toState, toParams, fromState, fromParams) ->\n    $scope.pageTitle = toState.data.pageTitle + \" | G4Plus\"  if angular.isDefined(toState.data.pageTitle)\n\nApp.config ($httpProvider) ->\n  $httpProvider.defaults.headers.get = {}  unless $httpProvider.defaults.headers.get\n  # disable IE ajax request caching\n  $httpProvider.defaults.headers.get['If-Modified-Since'] = '0'\n","examples = angular.module \"app.examples\", []\n\n# Example controller\n# =====\n# Typical sub-apps are to be modeled after this\n#  - bullet point 1\n#  - bullet point 2\n#  - bullet point 3\nexamples.controller \"ExamplesCtrl\", [\n  '$scope'\n  '$location'\n  'Alerts'\n\n  ($scope, $location, Alerts) ->\n    # Method for Docco Demontration\n    # --------\n    # Method does nothing\n    #  - bullet point 1\n    #  - bullet point 2\n    #  - bullet point 3\n    $scope.methodForDoccoDemonstration = () ->\n      true\n\n    # Boolean Toggle\n    # --------\n    # Flip-flops a boolean\n    $scope.toggle = () ->\n      $scope.methodExample = !$scope.methodExample\n\n    # Data handoff\n    # --------\n    # Passes data to the Alert service for the next controller and calls next controller\n    $scope.passToController = () ->\n      Alerts.set($scope.outgoingMessage)\n      $location.url('/receiver')\n\n    # Scope variables\n    # --------\n    # pageTitle: title of the page to be displayed in header\n    $scope.pageTitle = \"Examples\"\n    # twoWayBindingExampele\n    $scope.twoWayBindingExample = \"\"\n    # methodExample\n    $scope.methodExample = true\n    # incomingMessage: data recieved from Alerts service\n    $scope.incomingMessage = Alerts.get()\n    # outgoingMessage: data to be sent to Alerts service\n    $scope.outgoingMessage = \"Foo\"\n    # itemsPerPage: pagination\n    $scope.itemsPerPage = 10\n    # itemsPerPageList: array for Items Per Page select menu\n    $scope.itemsPerPageList = [10,25,50,100]\n\n    # Actions available on the list page\n    # NOTE: all the icons classes must be defined in the bootstrap-g4plus\n    $scope.actionsList = [\n      {label: 'Primary Action', action: null, icon: 'g4-icon-add'},\n      {label: 'Help', action: null, icon: 'g4-icon-help'}\n    ]\n]","filters = angular.module 'app.filters', [\n\n]\n\nfilters.filter 'date', ->\n  (input) ->\n    if typeof input is 'string'\n      digits = input.replace /\\D/g, ''\n\n      switch digits.length\n        when 8 then parsed = moment(digits, ['YYYYMMDD','MMDDYYYY'])\n        when 6 then parsed = moment(digits, ['YYMMDD','MMDDYY'])\n      \n      if parsed?.isValid()\n        return parsed.format('YYYY/MM/DD')\n\n    return input","home = angular.module \"app.home\", [ ]\n\n#home.config ($routeProvider) ->\n#  true\n#  $stateProvider.state \"home\",\n#    url: \"/home\"\n#    templateUrl: \"src/app/home/home.jade\"\n#    controller: \"HomeCtrl\"\n#    data:\n#      pageTitle: \"Home\"\n\n# Home controller\n# =====\n# Handles the home sub-app for the project\n#  - bullet point 1\n#  - bullet point 2\n#  - bullet point 3\nhome.controller \"HomeCtrl\", [\n  '$scope'\n\n  ($scope) ->\n    # Method for Docco Demontration\n    # --------\n    # Method does nothing\n    #  - bullet point 1\n    #  - bullet point 2\n    #  - bullet point 3\n    $scope.methodForDoccoDemonstration = () ->\n      alert 'hi!'\n\n    # pageTitle: holds the title of the page\n    $scope.pageTitle = \"MX Skeleton Project\"\n    # Foo variable. Very important, but loney without Bar.\n    $scope.foo = \"Welcome to the G4Plus Brunch/AngularJS/Jade Skeleton!\"\n]","about = angular.module \"app.receiver\", ['services.alerts']\n\n# About controller\n# =====\n# Handles the about sub-app for the project\n#  - bullet point 1\n#  - bullet point 2\n#  - bullet point 3\n\nabout.controller \"ReceiverCtrl\", [\n  '$scope'\n  '$location'\n  'Alerts'\n\n  ($scope, $location, Alerts) ->\n    $scope.passToController = () ->\n      Alerts.set($scope.outgoingMessage)\n      $location.path(\"/examples\")\n\n    # Foo variable. Very important, but loney without Bar.\n    $scope.pageTitle = \"Receiver Page\"\n    $scope.incomingMessage = Alerts.get()\n    $scope.outgoingMessage = \"Bar\"\n]","# * @fileoverview This file contains the Alerts service factory\n# * @author       Eric Storch (eric.storch@allegiantair.com)\n# * @module       services.alerts\nmodule = angular.module 'services.alerts', []\n\n# Fec Webservice\n# ==========\n# This is the interface to the /mx-admin/admin/fec web service\n# * @param $http  Http module for http communication\nmodule.factory 'Alerts', () ->\n  message = \"\"\n\n  # set\n  # --------\n  # Stores the passed message string\n  # * @param {string} mes  String value to store\n  set: (mes) ->\n    message = mes\n\n  # get\n  # --------\n  # Returns the stored message string and clears it from storage\n  # * @return {string}\n  get: () ->\n    message","signup = angular.module \"app.signup\", []\n\nsignup.directive \"usernamePattern\", () ->\n  require: \"^ngModel\"\n  restrict: 'A'\n  link: (scope, elm, attrs, ctrl) ->\n\n    pattern = new RegExp '^[a-zA-Z][a-zA-Z0-9\\.\\_\\-]+[a-zA-Z]$', 'g'\n\n    ctrl.$parsers.unshift (value) ->\n      if !!value and value.match pattern\n        ctrl.$setValidity 'pattern', true\n        return value\n      else\n        ctrl.$setValidity 'pattern', false\n        return undefined\n\nsignup.directive \"passwordPattern\", () ->\n  require: \"^ngModel\"\n  restrict: 'A'\n  link: (scope, elm, attrs, ctrl) ->\n\n    pattern = new RegExp '^[a-zA-Z0-9@_$]+$', 'g'\n\n    ctrl.$parsers.unshift (value) ->\n      if !!value and value.match pattern\n\n        allReqFound = true\n        requiredChars = ['[$@_]','[a-z]','[A-Z]','[0-9]']\n\n        for i of requiredChars\n          if !value.match requiredChars[i]\n            allReqFound = false\n\n        if allReqFound\n          ctrl.$setValidity 'pattern', true\n          return value\n        else\n          ctrl.$setValidity 'pattern', false\n          return undefined\n\n      else\n        ctrl.$setValidity 'pattern', false\n        return undefined\n\nsignup.directive \"emailPattern\", () ->\n  require: \"^ngModel\"\n  restrict: 'A'\n  link: (scope, elm, attrs, ctrl) ->\n\n    pattern = new RegExp '^([a-zA-Z0-9_.-])+@([a-zA-Z0-9_.-])+\\\\.([a-zA-Z])+([a-zA-Z])+$', 'i'\n\n    ctrl.$parsers.unshift (value) ->\n\n      if !!value and value.match pattern\n        ctrl.$setValidity 'pattern', true\n        return value\n\n      else\n        ctrl.$setValidity 'pattern', false\n        return undefined\n\nsignup.controller \"SignupCtrl\", [\n  '$scope',\n  ($scope) ->\n    $scope.showErrors = false\n\n    $scope.success = () ->\n      alert(\"Huzzah! Some 'success' event should happen!\");\n]","# * @fileoverview This file contains the edit module\n# * @author       Eric Storch\n# * @module       app.edit\nadd = angular.module 'app.add', [\n  'app.filters'\n  'ui.bootstrap'\n]\n\n# Edit controller\n# =====\n# Handles the edit view for the app.\nadd.controller 'AddCtrl', [\n  '$scope'\n  '$location'\n  '$window'\n  '$filter'\n  'flashStorage'\n\n  # getGroup ws callback\n  ($scope, $location, $window, $filter, flashStorage) ->\n    # Web-service wrapper\n    # --------\n    # Wraps a ws call with its callbacks\n    postWs = {\n      post: () ->\n        # WS call. Ex: ws.post(data, getGroup.getGroupSuccess, getGroup.getGroupError)\n      success: (data, status, headers, config) ->\n        # success callback\n      error: (data, status, headers, config) ->\n        # error callback\n    }\n\n    # Method to start a put ws call\n    # --------\n    $scope.postWs = () ->\n      postWs.post()\n\n    # Method to step back in the browser history\n    # --------\n    $scope.confirm = () ->\n      $scope.postWs()\n      $location.path(\"/list\").replace()\n      $location.url(\"/view/#{$scope.item.code}\")\n\n    # Method to step back in the browser history\n    # --------\n    $scope.cancel = () ->\n      $window.history.back()\n\n    # Scope variables\n    # --------\n    # pageTitle: contains the page title\n    $scope.pageTitle = \"Add [Object Type]\"\n\n    # dateFilter: date filter\n    $scope.dateFilter = $filter 'date'\n\n    # item: mock item for populating view\n    $scope.item = { code: \"\", title: \"\", description: \"\", date: \"\", checkbox: false}\n\n    # message: message object, set and retrived from the flashStorage service\n    flashStorage.set({\n      level: \"danger\"\n      message: \"[Object Type] could not be\"\n      tagline: \"Error\"\n      icon: \"icon-remove\"\n      action: \"created\"\n      status: \"500*\"\n    })\n    $scope.message = flashStorage.get()\n\n    # dateFilter: date filter\n    $scope.dateFilter = $filter 'date'\n]\n\n# Filter stuff\nadd.filter 'startFrom', ->\n  (input, start) ->\n    start = +start\n    input.slice(start)","# * @fileoverview This file contains the delete module\n# * @author       Eric Storch (eric.storch@allegiantair.com)\n# * @module       app.delete\ndel = angular.module 'app.delete', [\n  'ui.bootstrap'\n]\n\n# Delete controller\n# =====\n# Handles the delete view for the app.\ndel.controller 'DeleteCtrl', [\n  '$scope'\n  '$http'\n  '$modalInstance'\n  'code'\n\n  ($scope, $http, $modalInstance, code) ->\n    # Web-service wrapper\n    # --------\n    # Wraps a ws call with its callbacks\n    deleteWs = {\n      delete: () ->\n        # WS call. Ex: ws.delete(deleteWs.success, deleteWs.error)\n      success: (data, status, headers, config) ->\n        # success callback\n        $modalInstance.close true\n      error: (data, status, headers, config) ->\n        # success callback\n    }\n\n    # Method to start the delete ws call\n    # --------\n    $scope.confirm = () ->\n      deleteWs.success()\n\n    # Method to dismiss and close the modal\n    # --------\n    $scope.dismiss = $scope.cancel = () ->\n      $modalInstance.dismiss()\n\n    # Scope variables\n    # --------\n    # pageTitle: the page title\n    $scope.code = code\n    $scope.pageTitle = \"Delete [Object Type]\"\n]\n","# * @fileoverview This file contains the edit module\n# * @author       Eric Storch\n# * @module       app.edit\nedit = angular.module 'app.edit', [\n  'app.filters'\n  'ui.bootstrap'\n]\n\n# Edit controller\n# =====\n# Handles the edit view for the app.\nedit.controller 'EditCtrl', [\n  '$scope'\n  '$location'\n  '$window'\n  '$filter'\n  '$timeout'\n  'flashStorage'\n\n  # getGroup ws callback\n  ($scope, $location, $window, $filter, $timeout, flashStorage) ->\n    # Web-service wrapper\n    # --------\n    # Wraps a ws call with its callbacks\n    getWs = {\n      get: () ->\n        # WS call. Ex: ws.put(data, getGroup.getGroupSuccess, getGroup.getGroupError)\n      success: (data, status, headers, config) ->\n        # success callback\n        $scope.group = data\n      error: (data, status, headers, config) ->\n        # success callback\n    }\n\n    # Web-service wrapper\n    # --------\n    # Wraps a ws call with its callbacks\n    putWs = {\n      put: () ->\n        # WS call. Ex: ws.put(data, getGroup.getGroupSuccess, getGroup.getGroupError)\n      success: (data, status, headers, config) ->\n        # success callback\n      error: (data, status, headers, config) ->\n        # error callback\n    }\n\n    # Method to start a get ws call\n    # --------\n    $scope.getWs = () ->\n      getWs.get()\n\n    # Method to start a put ws call\n    # --------\n    $scope.putWs = () ->\n      putWs.put()\n\n    # Method to confirm changes to the item\n    # --------\n    $scope.confirm = () ->\n      # rewrite current history entry as \"/list\", wait 5ms, then redirect to view\n      $location.path(\"/list\").replace()\n      $timeout(\n        () -> $location.url(\"/view/#{$scope.item.code}\"),\n        5)\n\n    # Method to step back in the browser history\n    # --------\n    $scope.cancel = () -> $window.history.back()\n\n    # Scope variables\n    # --------\n    # pageTitle: contains the page title\n    $scope.pageTitle = \"Edit [Object Type]\"\n\n    # dateFilter: date filter\n    $scope.dateFilter = $filter 'date'\n\n    # parse url for id value\n    $scope.code = id = $location.url().replace( /^\\D+/g, '')\n\n    # mock item to populate view with\n    $scope.item = { code: $scope.code, title: \"Item title\", description: \"Details about item\", date: \"\", checkbox: true}\n\n    # messages: message object, set and retrived from the flashStorage service\n    flashStorage.set({\n      level: \"danger\"\n      message: \"[Object Type] could not be\"\n      tagline: \"Error\"\n      icon: \"icon-remove\"\n      action: \"edited\"\n      status: \"500*\"\n    })\n    $scope.message = flashStorage.get()\n\n    # dateFilter: date filter\n    $scope.dateFilter = $filter 'date'\n]\n\n# Filter stuff\nedit.filter 'startFrom', ->\n  (input, start) ->\n    start = +start\n    input.slice(start)","# * @fileoverview This file contains the list module\n# * @author       Eric Storch (eric.storch@allegiantair.com)\n# * @module       app.list\nlist = angular.module 'app.list', [\n  'ui.bootstrap'\n  'g4plus.pagination'\n  'g4plus.list-filter'\n]\n\n# List controller\n# =====\n# Handles the home view for the app\nlist.controller 'ListCtrl', [\n  '$scope'\n  '$location'\n  '$modal'\n  '$filter'\n  'flashStorage'\n\n  ($scope, $location, $modal, $filter, flashStorage) ->\n    # Web-service wrapper\n    # --------\n    # Wraps a ws call with its callbacks\n    listWs = {\n      listWs: () ->\n        # WS call. Ex: mockWs.listWs(listWs.success, listWs.error)\n      success: (data, status, headers, config) ->\n        # success callback\n      error: (data, status, headers, config) ->\n        # error callback\n    }\n\n    # Modal\n    # --------\n    # Opens a modal to display a given view. Also accepts parameters.\n    $scope.openDelete = (code) ->\n      modalInstance = $modal.open {\n        templateUrl: 'src/app/ui_flow/delete/modal.jade'\n        controller: 'DeleteCtrl'\n        resolve: {\n          code: () -> return code\n        }\n      }\n      # Executes after modal is closed\n      modalInstance.result.then () ->\n        delete $scope.list[code - 1]\n        $scope.list.length--\n        $scope.message = { item: \"[Object Type]\", type: \"success\", message: \"was\", action: \"deleted\", status: \"200\" }\n        $scope.clearMessage($scope.message2)\n        $scope.clearMessage($scope.message3)\n\n    # URL Builder\n    # --------\n    # Builds a new URL with the current state parameters\n    updateUrl = () ->\n      queryString = \"\"\n      for key of $scope.params\n        queryString = queryString + key + \"=\" + $scope.params[key] + \"&\"\n      queryString = queryString + \"filter_option=\" + $scope.filter_state.option\\\n        + \"&\" + \"filter_value=\" + $scope.filter_state.value + \"&\"\n\n      $location.url(\"/list?\" + queryString)\n\n    updateItemList = () ->\n      filtered_list = $filter('listFilter')($scope.list, $scope.filter_state.value, $scope.filter_state.option)\n      $scope.paginated_list = filtered_list.slice(\n        ($scope.params.page - 1) * $scope.params.pageSize,\n        $scope.params.page * $scope.params.pageSize\n      )\n      $scope.list_length = filtered_list.length\n\n    # Clear message\n    $scope.clearList = () ->\n      if $scope.params.select is \"9\"\n        $scope.list = [ ]\n      else\n        $scope.list = [\n          {\n            \"id\": 1,\n            \"code\": \"1\",\n            \"title\": \"Alpha\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 2,\n            \"code\": \"2\",\n            \"title\": \"Beta\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 3,\n            \"code\": \"3\",\n            \"title\": \"Gamma\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 4,\n            \"code\": \"4\",\n            \"title\": \"Delta\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 5,\n            \"code\": \"5\",\n            \"title\": \"Epsilon\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 6,\n            \"code\": \"6\",\n            \"title\": \"Alpha\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 7,\n            \"code\": \"7\",\n            \"title\": \"Beta\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 8,\n            \"code\": \"8\",\n            \"title\": \"Gamma\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 9,\n            \"code\": \"9\",\n            \"title\": \"Delta\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 10,\n            \"code\": \"10\",\n            \"title\": \"Epsilon\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 11,\n            \"code\": \"11\",\n            \"title\": \"Alpha\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 12,\n            \"code\": \"12\",\n            \"title\": \"Beta\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 13,\n            \"code\": \"13\",\n            \"title\": \"Gamma\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 14,\n            \"code\": \"14\",\n            \"title\": \"Delta\",\n            \"description\": \"Details about item\"\n          },\n          {\n            \"id\": 15,\n            \"code\": \"15\",\n            \"title\": \"Epsilon\",\n            \"description\": \"Details about item\"\n          }\n        ]\n\n      $scope.list_length = $scope.list.length\n      updateItemList()\n\n    # Scope variables\n    # --------\n    # pageTitle: title of the page\n    $scope.pageTitle = '[Object Type] List'\n\n    # params: describes the current view state\n    $scope.params = { select: \"\", \"pageSize\": \"10\", \"page\": \"1\" }\n\n    # filter:\n    $scope.filter_state =\n      option: \"_all\"\n      value: \"\"\n      optionList: [\n        {key: '_all', label: 'All'},\n        {key: 'code', label: 'Code'},\n        {key: 'title', label: 'Title'},\n        {key: 'description', label: 'Description'}\n      ]\n      filterBy: (value, option) ->\n        $scope.filter_state.value = value\n        $scope.filter_state.option = option\n        updateUrl()\n\n    # select: list of select option key/value pairs (normally populated by ws)\n    $scope.select = {\n      1: \"Option 1\"\n      2: \"Option 2\"\n      3: \"Option 3\"\n      9: \"Clear List\"\n    }\n\n    # list: list array contains page data (normally populated by ws)\n    $scope.list = [ ]\n\n    # messages: message object, in production there should be only one per\n    # controller. Set and retrived from the flashStorage service\n    flashStorage.set({\n      level: \"success\"\n      message: \"Aircraft Program list was\"\n      tagline: \"Success\"\n      icon: \"icon-ok-circle\"\n      action: \"retreived\"\n      status: \"200*\"\n    })\n    $scope.message = flashStorage.get()\n\n    # more quick and dirty examples of flash messages\n    $scope.message2 = {\n      level: \"warning\"\n      message: \"Aircraft Program list was\"\n      tagline: \"Warning\"\n      icon: \"icon-remove\"\n      action: \"retreived\"\n      status: \"200*\"\n    }\n    $scope.message3 = {\n      level: \"danger\"\n      message: \"Aircraft Program list could not be\"\n      tagline: \"Error\"\n      icon: \"icon-remove\"\n      action: \"retreived\"\n      status: \"500*\"\n    }\n\n    # Marshals URL query parameters into the params object\n    urlParams = $location.search()\n    for item of urlParams\n      if item == 'filter_option'\n        $scope.filter_state.option = urlParams[item]\n      else if item == 'filter_value'\n        $scope.filter_state.value = urlParams[item]\n      else\n       $scope.params[item] = urlParams[item]\n\n    # Watcher that fires specified method when given object is modified\n    $scope.$watch 'params', (() -> updateUrl()), true\n    $scope.$watch 'params.select', (() -> $scope.clearList())\n\n    # Actions available on the list page\n    # NOTE: all the icons classes must be defined in the bootstrap-g4plus\n    $scope.actionsList = [\n      {label: 'Add [Object Type]', action: null, link: '#/add', linkState: null, icon: 'g4-icon-add'},\n      {label: 'Help', action: null, icon: 'g4-icon-help'}\n    ]\n\n    updateItemList()\n]\n\n# Filter stuff\nlist.filter 'startFrom', ->\n  (input, start) ->\n    start = +start\n    input.slice(start)\n\n\nlist.filter 'listFilter', [\n  '$filter'\n\n  ($filter) ->\n    (input, value, option) ->\n\n      output = input\n\n      # Only check when filtering by some input value\n      if value.length\n        if option && option != '_all'\n          filter_column = {}\n          filter_column[option] = value\n          output = $filter('filter')(input, filter_column)\n        else\n          output = $filter('filter')(input, value)\n\n      return output\n]\n","# * @fileoverview This file contains the view module\n# * @author       Eric Storch\n# * @module       app.view\nview = angular.module 'app.view', [\n  'app.filters'\n  'ui.bootstrap'\n]\n\n# Edit controller\n# =====\n# Handles the view view for the app.\nview.controller 'ViewCtrl', [\n  '$scope'\n  '$location'\n  '$modal'\n  '$window'\n  '$filter'\n  'flashStorage'\n\n  # getGroup ws callback\n  ($scope, $location, $modal, $window, $filter, flashStorage) ->\n    # Web-service wrapper\n    # --------\n    # Wraps a ws call with its callbacks\n    getWs = {\n      get: () ->\n        # WS call. Ex: ws.put(data, getGroup.getGroupSuccess, getGroup.getGroupError)\n      success: (data, status, headers, config) ->\n        # success callback\n      error: (data, status, headers, config) ->\n        # success callback\n    }\n\n    # Web-service wrapper\n    # --------\n    # Wraps a ws call with its callbacks\n    putWs = {\n      put: () ->\n        # WS call. Ex: ws.put(data, getGroup.getGroupSuccess, getGroup.getGroupError)\n      success: (data, status, headers, config) ->\n        # success callback\n      error: (data, status, headers, config) ->\n        # error callback\n    }\n\n    # Modal\n    # --------\n    # Opens a modal to display a given view. Also accepts parameters.\n    $scope.openDelete = (code) ->\n      modalInstance = $modal.open {\n        templateUrl: 'src/app/ui_flow/delete/modal.jade'\n        controller: 'DeleteCtrl'\n        resolve: {\n          code: () -> return code\n        }\n      }\n      # Executes after modal is closed\n      modalInstance.result.then () ->\n        $location.url(\"/list\")\n\n    # Method to start a get ws call\n    # --------\n    $scope.getWs = () ->\n      getWs.get()\n\n    # Method to start a put ws call\n    # --------\n    $scope.putWs = () ->\n      putWs.put()\n\n    # Scope variables\n    # --------\n    # pageTitle: contains the page title\n    $scope.pageTitle = \"View [Object Type]\"\n    # dateFilter: date filter\n    $scope.dateFilter = $filter 'date'\n\n    # code: code value extracted from url parse\n    $scope.code = id = $location.url().replace( /^\\D+/g, '')\n\n    # item: mock item for populating view\n    $scope.item = { code: $scope.code, title: \"Item title\", description: \"Details about item\", date: \"\", checkbox: true}\n\n    # message: message object, set and retrived from the flashStorage service\n    flashStorage.set({\n      level: \"danger\"\n      message: \"[Object Type] could not be\"\n      tagline: \"Error\"\n      icon: \"icon-remove\"\n      action: \"created\"\n      status: \"500*\"\n    })\n    $scope.message = flashStorage.get()\n\n    # dateFilter: date filter\n    $scope.dateFilter = $filter 'date'\n\n    # isView: if true, makes view fields un-editable\n    $scope.isView = true\n\n    # Actions available on the list page\n    # NOTE: all the icons classes must be defined in the bootstrap-g4plus\n    $scope.actionsList = [\n      {label: 'Edit', link: '#/edit/' + $scope.code, icon: 'g4-icon-edit'},\n      {label: 'Delete', action: (() -> $scope.openDelete($scope.code)), icon: 'g4-icon-delete'},\n      {label: 'Help', action: null, icon: 'g4-icon-help'}\n    ]\n]\n\n# Filter stuff\nview.filter 'startFrom', ->\n  (input, start) ->\n    start = +start\n    input.slice(start)"]}